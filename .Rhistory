library(itcSegment)
library(gdalUtils)
library(rgdal)
data <- raster("C:\\Users\\nkolarik\\Desktop\\thesis\\uas_data\\grass\\Products\\A2200\\A2200SequoiaCHM.tif")
df <- data.frame(z=data[])
xy <- xyFromCell(data, 1:ncell(data))
df$x <- xy[,1]
df$y <- xy[,2]
rm(xy)
head(df)
summary(df)
newdf <- na.omit(df)
newdf
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, maxDIST = 30, HeightThreshold = 1 ,epsg=32632)
summary(se)
plot(se,axes=T)
plot(se,col=gray((max(se$Height_m)-se$Height_m)/(max(se$Height_m)-min(se$Height_m))),axes=T)
writeOGR(poly, dsn = '.', layer = 'poly', driver = "ESRI Shapefile")
prj_str <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
prj_str_utm <- "+proj=utm +south +zone=34 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
stems <- SpatialPointsDataFrame(d[,c("POINT_X","POINT_Y")], d, coords.nrs = numeric(0), proj4string = CRS(prj_str), match.ID=T)
writeOGR(poly, dsn = '.', layer = 'poly', driver = "ESRI Shapefile")
(
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly', driver = "ESRI Shapefile")
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly', driver = "ESRI Shapefile")
writeOGR(spTransform(se), dsn = '.', layer = 'poly1', driver = "ESRI Shapefile")
prj_str_utm <- "+proj=utm +south +zone=35 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly', driver = "ESRI Shapefile")
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly1', driver = "ESRI Shapefile")
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, maxDIST = 30, HeightThreshold = 1 ,epsg=32735)
plot(se,axes=T)
plot(se,col=gray((max(se$Height_m)-se$Height_m)/(max(se$Height_m)-min(se$Height_m))),axes=T)
prj_str <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
prj_str_utm <- "+proj=utm +south +zone=35 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly1', driver = "ESRI Shapefile")
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly2', driver = "ESRI Shapefile")
library(itcSegment)
library(gdalUtils)
library(rgdal)
data <- raster("C:\\Users\\nkolarik\\Desktop\\thesis\\uas_data\\grass\\Products\\A2200\\A2200MavicCHM.tif")
#data1 <- raster(paste0(path, "A2200SequoiaStack_sbst2.tif"));
#data <- gdalwarp(data1,dstfile= paste0(path, "rsmpl3.tif"),
#         t_srs='+proj=utm +zone=11 +datum=WGS84',order = 3, output_Raster=TRUE,
#         overwrite=TRUE,verbose=TRUE)
df <- data.frame(z=data[])
xy <- xyFromCell(data, 1:ncell(data))
df$x <- xy[,1]
df$y <- xy[,2]
rm(xy)
head(df)
summary(df)
## removing NA vals
newdf <- na.omit(df)
#newdf
## ESPG (Euro Petroleum Survey Group) 32735 for UTM 35S
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, maxDIST = 30, HeightThreshold = 1 ,epsg=32735)
summary(se)
plot(se,axes=T)
## If we want to seperate the height of the trees by grayscales:
plot(se,col=gray((max(se$Height_m)-se$Height_m)/(max(se$Height_m)-min(se$Height_m))),axes=T)
## to save the data use rgdal function called writeOGR. For more help see rgdal package.
## End(Not run)
## Projection
prj_str <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
prj_str_utm <- "+proj=utm +south +zone=35 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly2', driver = "ESRI Shapefile")
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = '.', layer = 'poly3', driver = "ESRI Shapefile")
se$resolution
se$MinSearchFilSize
se$minDIST
se
se$variables
se$minDIST
library(itcSegment)
library(gdalUtils)
library(rgdal)
data <- raster("C:\\Users\\nkolarik\\Desktop\\thesis\\uas_data\\grass\\Products\\A2200\\A2200MavicCHM.tif")
#data1 <- raster(paste0(path, "A2200SequoiaStack_sbst2.tif"));
#data <- gdalwarp(data1,dstfile= paste0(path, "rsmpl3.tif"),
#         t_srs='+proj=utm +zone=11 +datum=WGS84',order = 3, output_Raster=TRUE,
#         overwrite=TRUE,verbose=TRUE)
df <- data.frame(z=data[])
xy <- xyFromCell(data, 1:ncell(data))
df$x <- xy[,1]
df$y <- xy[,2]
rm(xy)
head(df)
summary(df)
## removing NA vals
newdf <- na.omit(df)
#newdf
## ESPG (Euro Petroleum Survey Group) 32735 for UTM 35S
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, MinSearchFilSize = 3, MaxSearchFilSize = 7,maxDIST = 30, HeightThreshold = 1 ,epsg=32735)
summary(se)
plot(se,axes=T)
## If we want to seperate the height of the trees by grayscales:
plot(se,col=gray((max(se$Height_m)-se$Height_m)/(max(se$Height_m)-min(se$Height_m))),axes=T)
## to save the data use rgdal function called writeOGR. For more help see rgdal package.
## End(Not run)
## Projection
prj_str <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
prj_str_utm <- "+proj=utm +south +zone=35 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
writeOGR(spTransform(se, CRS(prj_str_utm)), dsn = './tst', layer = 'poly37', driver = "ESRI Shapefile")
data <- raster("C:\\Users\\nkolarik\\Desktop\\thesis\\uas_data\\grass\\Products\\A2200\\A2200MavicCHM.tif")
df <- data.frame(z=data[])
xy <- xyFromCell(data, 1:ncell(data))
df$x <- xy[,1]
df$y <- xy[,2]
rm(xy)
library(itcSegment)
library(gdalUtils)
library(rgdal)
data <- raster("C:\\Users\\nkolarik\\Desktop\\thesis\\uas_data\\grass\\Products\\A2200\\A2200MavicCHM.tif")
df <- data.frame(z=data[])
df$x <- xy[,1]
df$y <- xy[,2]
rm(xy)
head(df)
summary(df)
newdf <- na.omit(df)
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, MinSearchFilSize = 3, MaxSearchFilSize = 21,maxDIST = 30, HeightThreshold = 1 ,epsg=32735)
newdf <- na.omit(df)
se<-itcLiDAR(newdf$x,newdf$y,newdf$z, minDIST = 1, MinSearchFilSize = 3, MaxSearchFilSize = 21,maxDIST = 30, HeightThreshold = 1 ,epsg=32735)
xy <- xyFromCell(data, 1:ncell(data))
df$x <- xy[,1]
xy <- xyFromCell(data, 1:ncell(data))
df <- data.frame(z=data[])
xy <- xyFromCell(data, 1:ncell(data))
